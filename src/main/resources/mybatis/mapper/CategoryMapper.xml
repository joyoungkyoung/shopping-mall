<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.nicky.shoppingmall.domain.category.mapper.CategoryMapper">
    <select id="getLatestOrderByParent" parameterType="Integer" resultType="Integer">
        /* CategoryMapper::getLatestOrderByParent */
        select ifnull(`order`, 0) as `order`
        from category c
        right join (select '') as t1 
        <choose>
        <when test="parent_category_id == null">on c.parent_category_id is null</when>
        <otherwise>on c.parent_category_id = #{parentCategoryId}</otherwise>
        </choose>
        order by `order` desc
        limit 1
    </select>

    <select id="getCategoryList" resultType="GetCategoryDto">
        /* CategoryMapper::getCategoryList */
        select * from category;
    </select>

    <insert id="addCategoryList" parameterType="List">
        /* CategoryMapper::addCategoryList */
        insert into category (parent_category_id, name, `order`, create_date) values
        <foreach collection="list" item="item" separator=",">
            (#{item.parentCategoryId}, #{item.name}, #{item.order}, now())
        </foreach>
    </insert>

    <update id="changeCategoryList" parameterType="List">
        /* CategoryMapper::changeCategoryList */
        update category c
        join (
            <foreach collection="list" item="item" separator=" union all ">
            select #{item.categoryId} as id, #{item.name} as name
            </foreach>
        ) t on c.id = t.id
        set c.name = t.name, c.update_date = now()
    </update>

    <delete id="removeCategoryList" parameterType="List"> 
        /* CategoryMapper::removeCategoryList */
        delete from category where id in
        <foreach collection="list" item="id" open="(" close=")" separator=",">#{id}</foreach>
    </delete>

    <update id="reOrder">
        /* CategoryMapper::reOrder */
        update category c
        join (
            select id, row_number() over(partition by parent_category_id) as `order`
            from category
            order by parent_category_id, `order`
        ) t on c.id = t.id
        set c.`order` = t.`order`, c.update_date = now()
    </update>
   
</mapper>